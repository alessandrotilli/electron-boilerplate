name: os test

on:
  workflow_dispatch:
    inputs:
      app_platforms:
        required: false
        default: 'wml'

  push:
    paths:
      - '**/os.yml'
        
jobs:
  fetch:
    runs-on: ubuntu-20.04
    steps:
      - name: set outputs
        id: env_props
        run: |
          echo "::set-output name=skip_win::${{ contains(github.event.inputs.app_platforms, 'w') == false }}"
          echo "::set-output name=skip_mac::${{ contains(github.event.inputs.app_platforms, 'm') == false }}"
          echo "::set-output name=skip_linux::${{ contains(github.event.inputs.app_platforms, 'l') == false }}"

    outputs:
      skip_win: ${{ steps.env_props.outputs.skip_win }}
      skip_mac: ${{ steps.env_props.outputs.skip_mac }}
      skip_linux: ${{ steps.env_props.outputs.skip_linux }}
      
  setMatrix:
    needs: [fetch]
    runs-on: ubuntu-20.04
    steps:
      - id: matrix 
        run: |
          MATRIX_JSON=$(cat << EOF
          [
            {
              "name": "ubuntu-20.04",
              "skip": "${{ needs.fetch.outputs.skip_linux }}"
            },
            {
              "name": "macOS-10.15",
              "skip": "${{ needs.fetch.outputs.skip_mac }}"
            },
            {
              "name": "windows-2022",
              "skip": "${{ needs.fetch.outputs.skip_win }}"
            }
          ]
          EOF
          )
          FILTERED_JSON=$(echo "$MATRIX_JSON" | jq  '[ .[] | select(.skip | contains("true") | not) | .name ]')
          echo $FILTERED_JSON
          echo "::set-output name=matrix_json::{\"include\":$(echo $FILTERED_JSON)}"
        
    outputs:
      matrix_json: ${{ steps.matrix.outputs.matrix_json }}

  echo:
    needs: [ fetch, setMatrix ]
    runs-on: ubuntu-20.04
    steps:
      - run: echo ${{ needs.setMatrix.outputs.matrix_json }}

  package:
    needs: [ fetch, setMatrix, echo ]

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: >-
          ${{fromJson(needs.setMatrix.outputs.matrix_json).include}}

    steps:
      - run: echo ciao
