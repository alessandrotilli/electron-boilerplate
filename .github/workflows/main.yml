name: electron builder

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ release/* ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-10.15]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2

      
      - if: matrix.os == 'ubuntu-latest'
        name: install wine
        run: |
            sudo dpkg --add-architecture i386
            wget -qO - https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add -
            sudo add-apt-repository ppa:cybermax-dexter/sdl2-backport
            sudo apt-add-repository "deb https://dl.winehq.org/wine-builds/ubuntu $(lsb_release -cs) main"
            sudo apt install --install-recommends winehq-stable

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: setting ssh key
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
          
            # setup yarn cache
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-


      - name: installing deps
        run: yarn install

      - name: build js
        run: yarn build

      - if: matrix.os == 'ubuntu-latest'
        name: build win
        run: yarn release:win

      - if: matrix.os == 'ubuntu-latest'
        name: build linux
        run: yarn release:linux

      - if: matrix.os == 'macOS-10.15'
        name: build mac
        run: yarn release:mac
      
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: installers
          path: |
            dist/*/*.dmg
            dist/*/*.exe
            dist/*/*.deb
